replicaCount: 1

# https://hub.docker.com/r/directus/directus/tags
image:
  repository: directus/directus
  pullPolicy: IfNotPresent
  tag: "9.23.4"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

resources: {}
podAnnotations: {}
podSecurityContext: {}
securityContext: {}

service:
  type: ClusterIP
  port: 8055

ingress:
  enabled: false

ingressroute:
  enabled: true
  hosts:
    - host: cms.pleiades.kolv.in
      path: /

# HPA
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Service Config
config:
  application: # https://docs.directus.io/self-hosted/config-options.html#general
    key: "6aeb8a0c-fdd5-4356-b5a8-c61fa83fc0ac"
    secret: "4c28b02f-6c4c-4e8d-a40f-fa5a25f3d691"
    public_url: https://cms.kolv.in
    log_level: debug
  auth:
    sso: # https://docs.directus.io/self-hosted/config-options.html#sso-oauth2-and-openid
      github:
        enabled: true
        allow_public_registrations: false
        auth_url: https://github.com/login/oauth/authorize
        access_url: https://github.com/login/oauth/access_token
        profile_url: https://api.github.com/user
        existingSecret: "directus-github-sso"
        existingSecretClientId: client-id
        existingSecretClientSecret: client-secret
        default_role_id: b9cb9816-5f30-4423-9677-b257362b2a8c
      discord:
        enabled: false
        allow_public_registrations: false
        auth_url: https://discord.com/api/oauth2/authorize
        access_url: https://discord.com/api/oauth2/token
        profile_url: https://discord.com/api/users/@me
        existingSecret: "directus-discord-sso"
        existingSecretClientId: client-id
        existingSecretClientSecret: client-secret
        default_role_id: b9cb9816-5f30-4423-9677-b257362b2a8c
    admin: # https://docs.directus.io/self-hosted/config-options.html#admin-account
      enabled: false
      existingSecret: "directus-admin-login"
      existingSecretEmailKey: "email"
      existingSecretPasswordKey: "password"
  datastore:
    enabled: true
    client: "postgres"
    host: "10.19.1.212"
    port: "5432"
    database: "directus"
    user: "directus"
  cache:
    enabled: true
    client: "redis"
    host: "10.19.1.213"
    ttl: "5m"

# Service DB
# https://docs.directus.io/self-hosted/config-options.html#database
# https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
postgresql:
  enabled: true
  image:
    tag: "14.7.0"
  architecture: standalone
  primary:
    service:
      type: LoadBalancer
      loadBalancerIp: "10.19.1.212"
      loadBalancerSourceRanges:
        - "10.19.1.0/24"
    persistence:
      storageClass: longhorn-fast
      size: 8Gi
  auth:
    database: directus
    username: directus
    existingSecret: "directus-postgresql"

# Service Cache
# https://docs.directus.io/self-hosted/config-options.html#cache
# https://github.com/bitnami/charts/blob/main/bitnami/redis/values.yaml
redis:
  enabled: true
  architecture: standalone
  image:
    tag: "6.2"
  master:
    service:
      type: LoadBalancer
      loadBalancerIp: "10.19.1.213"
      loadBalancerSourceRanges:
        - "10.19.1.0/24"
    persistence:
      enabled: true
      storageClass: longhorn-fast
      size: 8Gi
  auth:
    enabled: true
    existingSecret: "directus-redis"
    existingSecretPasswordKey: "password"
