apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "directus.fullname" . }}
  labels:
    {{- include "directus.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "directus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "directus.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: CONFIG_PATH
              value: /etc/{{ include "directus.fullname" . }}/config/config.yaml
            {{- if .Values.config.datastore.enabled }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "directus.fullname" . }}-postgresql
                  key: password
            {{- end }}
            {{- if .Values.config.cache.enabled }}
            - name: CACHE_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "directus.fullname" . }}-redis
                  key: password
            {{- end }}
            {{- if .Values.config.auth.admin.enabled }}
            - name: ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.auth.admin.existingSecret }}
                  key: {{ .Values.config.auth.admin.existingSecretEmailKey }}
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.auth.admin.existingSecret }}
                  key: {{ .Values.config.auth.admin.existingSecretPasswordKey }}
            {{- end }}
            {{- if .Values.config.auth.sso.github.enabled }}
            - name: AUTH_GITHUB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.auth.sso.github.existingSecret }}
                  key: {{ .Values.config.auth.sso.github.existingSecretClientId }}
            - name: AUTH_GITHUB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.auth.sso.github.existingSecret }}
                  key: {{ .Values.config.auth.sso.github.existingSecretClientSecret }}
            {{- end }}
            {{- if .Values.config.auth.sso.discord.enabled }}
            - name: AUTH_DISCORD_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.auth.sso.discord.existingSecret }}
                  key: {{ .Values.config.auth.sso.discord.existingSecretClientId }}
            - name: AUTH_DISCORD_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.auth.sso.discord.existingSecret }}
                  key: {{ .Values.config.auth.sso.discord.existingSecretClientSecret }}
            {{- end }}
          volumeMounts:
          - name: config
            mountPath: /etc/{{ include "directus.fullname" . }}/config
            readOnly: true
          {{- if .Values.config.storage.local.enabled }}
          - name: app-local-storage
            mountPath: {{ .Values.config.storage.local.root | quote }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: config
        configMap:
          name: {{ include "directus.fullname" . }}-application-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: app-local-storage
        persistentVolumeClaim:
          claimName: {{ if .Values.config.storage.local.existingClaim }}{{ .Values.config.storage.local.existingClaim }}{{- else }}{{ template "directus.fullname" . }}-pvc{{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
